<?xml version="1.0" encoding="utf-8"?>

<launch>

    <arg name="device_type_camera1"    		default="t265"/>
    <arg name="device_type_camera2"    		default="d4.5"/>	<!-- Note: using regular expression. match D435, D435i, D415... -->
    <arg name="serial_no_camera1"    			default="133122110783"/>
    <arg name="serial_no_camera2"    			default="116622071599"/>
    <arg name="camera1"              			default="cam_tracking"/>		
    <arg name="camera2"              			default="cam_depth"/>		
    <arg name="clip_distance"                         default="2.0"/>


    <include file="$(find realsense2_camera)/launch/rs_d400_and_t265.launch">
            <arg name="device_type_camera1"             value="$(arg device_type_camera1)"/>
            <arg name="device_type_camera2"             value="$(arg device_type_camera2)"/>
            <arg name="serial_no_camera1"               value="$(arg serial_no_camera1)"/>
            <arg name="serial_no_camera2"               value="$(arg serial_no_camera2)"/>
            <arg name="camera1"                         value="$(arg camera1)"/>
            <arg name="camera2"                         value="$(arg camera2)"/>
            <arg name="clip_distance"                   value="$(arg clip_distance)"/>
            
            <arg name="depth_width"         value="1280"/>
		<arg name="depth_height"        value="720"/>
		<arg name="color_width"         value="1920"/>
		<arg name="color_height"        value="1080"/>
            
    </include>
    

    
  <!--<node pkg="elevation_mapping" type="add_tf.py" name="add_tf" output="screen"/-->  

  <!--node pkg="elevation_mapping_demos" type="odom_to_pose_t265.py" name="odom_to_pose_t265" output="screen"/--> 
  <node pkg="elevation_mapping_demos" type="tf_to_pose_publisher.py" name="tf_to_pose_publisher" output="screen"/> 
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0  /map /$(arg camera1)_odom_frame 100"/> 


    <!-- RANSAC plane detection node. This is not perfect but better than nothing. -->
 
	  <!--<node pkg="lidar_basic" type="process_lidar" name="plane_detection" output="screen">
	  	<param name="input_pointcloud" value="/$(arg camera2)/depth/color/points"/>
		<param name="output_pointcloud" value="/filtered_points"/>\
	  </node-->

	

  <!-- Launch elevation mapping node. -->
  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">

    <param name="point_cloud_topic" value="/$(arg camera2)/depth/color/points"/>
    <!--param name="point_cloud_topic" value="/filtered_points"/-->
    
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/robots/realsense_combined.yaml" />  
    <rosparam command="load" file="$(find elevation_mapping_demos)/config/postprocessing/rs_elevation_filter.yaml" />     
  </node>  
  
  <!--node pkg="elevation_mapping" type="sub.py" name="listener" output="screen" />-->
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find elevation_mapping_demos)/rviz/rs_elevation_map.rviz" />
  
</launch>
